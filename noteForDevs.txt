hello la team backend this is the github repo this is what i put in here:
django configured with sqlite3 db (to be changed later)
django rest framework: building Web APIs in Django applications, define, create, and manage RESTful APIs.
we use DRF to define the API endpoints.
pytest for unit testing
selenium
elasticSearch dependencies
django debugger
postgresql db

working with pytest:
- in the tests dir li dertou:
create a file: test_"name_of_file_to_test".py
Run Tests: pytest (wa7dha fel command line wla specify a file//dir)

DRF: in settings.py we need to adjust the DRF Settings depending on our tp's requirements (omb3d tsema hadi dertha besh manenssash)

run selenium: python manage.py test yourapp.tests.MySeleniumTests
installer le chromedriver and put it at the same file level as manage.py: so this works :SELENIUM_WEBDRIVER_PATH = '../chromedriver_win32'


/******* this is what is important now ****************/
les devs run to install dependencies:
pip install -r requirements.txt
python manage.py runserver

Response.headers = {'Authorization': 'Token ', token}

bach nejbed l ids
for hit in response:
        ids = hit.meta.id
        print(ids)

es only displays 10 first results , to display all :
# Create search instance
search = Search(using=client)
# Count search results
total = search.count()
search = search[0:total]
# Get all search results
results = search.execute()


def ready(self):
        from django.contrib.auth.models import User
        from Users.models import Admin, user
        admins = User.objects.all() #getting all the admins created using the createsuperuser command
        for ad in admins:
            adBdd, created = Admin.objects.get_or_create(id=ad.id) #checking if the admin ad is in our db yet
            if created: #if not , we create its user instance with role administrator
                userAdmin = user(userName=ad.username, password=ad.password, role='Administrator')
                userAdmin.save()
                Admin.objects.filter(id=adBdd.id).update(userId=userAdmin.pk)

